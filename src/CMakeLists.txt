#generated by bfcmake
cmake_minimum_required(VERSION 3.0.0 FATAL_ERROR)

#name of project
project(dev)


#version
set(dev_MAJOR_VERSION 0)
set(dev_MINOR_VERSION 0)
set(dev_PATCH_VERSION 0)
set(dev_VERSION ${dev_MAJOR_VERSION}.${dev_MINOR_VERSION}.${dev_PATCH_VERSION})

set(GCC_COVERAGE_COMPILE_FLAGS "")

#package dependecies
find_package(blc REQUIRED)
find_package(Threads REQUIRED)

#source files
set(SRCS
	src/peerServer.cpp
	src/cinConnector.cpp
	src/httpPost.cpp
	src/peerConnector.cpp
	src/handleKeyParam.cpp
	src/rsaKey.cpp
	src/lists.cpp
	src/book.cpp
	src/servConnector.cpp
	src/trans.cpp
	src/confFile.cpp
	src/chain.cpp
	src/adminConnector.cpp
	src/main.cpp
	src/initChain.cpp
	src/connectedPeer.cpp
	src/getMyIp.cpp
	)


#protocoles
set(PROTOS
	protocols/protocolCinFromCin.cpp
	protocols/protocolAdminFromMaster.cpp
	protocols/protocolChainFromMaster.cpp
	protocols/protocolMasterFromPeer.cpp
	protocols/protocolPeerFromPeer.cpp
	protocols/protocolMasterFromChain.cpp
	protocols/protocolServerFromMaster.cpp
	protocols/protocolCinFromMaster.cpp
	protocols/protocolPeerFromMaster.cpp
	protocols/protocolMasterFromCin.cpp
	protocols/protocolMasterFromServer.cpp
	protocols/protocolAdminFromAdmin.cpp
	protocols/protocolMasterFromAdmin.cpp
	)


#header files
set(HEADER
	include/chain.hpp
	include/identity.hpp
	include/chainInfo.hpp
	include/peerServer.hpp
	include/trans.hpp
	include/book.hpp
	include/cinConnector.hpp
	include/handleKeyParam.hpp
	include/meta.hpp
	include/adminConnector.hpp
	include/confFile.hpp
	include/coInfo.hpp
	include/getMyIp.hpp
	include/lists.hpp
	include/initChain.hpp
	include/connectedPeer.hpp
	include/httpPost.hpp
	include/peerConnector.hpp
	include/servConnector.hpp
	)


add_library(obj_jeSuisUnNom STATIC ${SRCS} ${HEADER} ${PROTOS})

target_include_directories(obj_jeSuisUnNom PRIVATE src/include)
target_include_directories(obj_jeSuisUnNom PRIVATE ../bfc)
target_include_directories(obj_jeSuisUnNom PRIVATE ../include/.)
#linking libraries
target_link_libraries(obj_jeSuisUnNom PRIVATE rsa)
target_link_libraries(obj_jeSuisUnNom PRIVATE libtommath)
target_link_libraries(obj_jeSuisUnNom PRIVATE libtomcrypt)
target_link_libraries(obj_jeSuisUnNom PRIVATE blc)
target_link_libraries(obj_jeSuisUnNom PRIVATE Threads::Threads)
#compilation propriety
set_property(TARGET obj_jeSuisUnNom PROPERTY CXX_STANDARD 17)

add_definitions(${GCC_COVERAGE_COMPILE_FLAGS})
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}")

configure_file( include/version.hpp.in ${CMAKE_BINARY_DIR}/generated/version.hpp )

#end of cmake

